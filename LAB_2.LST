Turbo Assembler	 Version 4.1	    05/31/25 23:00:36	    Page 1
lab_2.asm



      1	0000			     .model small
      2	0000			     .stack 100h       ; Устанавливаем размер стека (256 байт)
      3
      4				     extrn InsBlanks:near ; Объявляем внешнюю процедуру InsBlanks
      5
      6	0000			     .data
      7	0000  48 65 6C 6C 6F 20	6D+	 input_string  db 'Hello man cycle',0 ;	Исходная строка
      8	      61 6E 20 63 79 63	6C+
      9	      65 00
     10	0010  001A			 k	       dw 26		     ; Желаемая	длина
     11	0012  0100*(24)			 result_buffer db 256 dup('$')	     ; Буфер для результата
     12	0112  14*(0000)			 words_buffer  dw 20 dup(0)	     ; Массив указателей на слова
     13	013A  0100*(24)			 temp_buffer   db 256 dup('$')	     ; Буфер для нормализованной	    +
     14				     строки
     15	023A  0D 0A 24			 newline       db 13,10,'$'	     ; Перевод строки (CR+LF)
     16
     17	023D			     .code
     18	0000			     main proc
     19	0000  B8 0000s			 mov ax, @data	; Загружаем адрес	данных в	DS и ES
     20	0003  8E D8			 mov ds, ax
     21	0005  8E C0			 mov es, ax
     22
     23					 ; Вызов InsBlanks	с 5 параметрами:
     24	0007  50 55 8B EC C7 46	02+	 push offset input_string   ; Адрес исходной строки
     25	      0000r 5D
     26	0011  FF 36 0010r		 push k			    ; Желаемая длина
     27	0015  50 55 8B EC C7 46	02+	 push offset result_buffer  ; Буфер для	результата
     28	      0012r 5D
     29	001F  50 55 8B EC C7 46	02+	 push offset words_buffer   ; Буфер для	массива слов
     30	      0112r 5D
     31	0029  50 55 8B EC C7 46	02+	 push offset temp_buffer    ; Буфер для	нормализованной строки
     32	      013Ar 5D
     33	0033  E8 0000e			 call InsBlanks
     34
     35					 ; Выводим результат
     36	0036  B4 09			 mov ah, 09h
     37	0038  BA 0012r			 lea dx, result_buffer
     38	003B  CD 21			 int 21h
     39
     40					 ; Выводим перевод строки
     41	003D  BA 023Ar			 lea dx, newline
     42	0040  CD 21			 int 21h
     43
     44					 ; Завершаем программу
     45	0042  B8 4C00			 mov ax, 4C00h
     46	0045  CD 21			 int 21h
     47	0047			     main endp
     48
     49				     end main
Turbo Assembler	 Version 4.1	    05/31/25 23:00:36	    Page 2
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "05/31/25"
??FILENAME			  Text	 "lab_2	  "
??TIME				  Text	 "23:00:36"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 _TEXT
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 LAB_2
@INTERFACE			  Text	 000H
@MODEL				  Text	 2
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
INPUT_STRING			  Byte	 DGROUP:0000
INSBLANKS			  Near	 ----:---- Extern
K				  Word	 DGROUP:0010
MAIN				  Near	 _TEXT:0000
NEWLINE				  Byte	 DGROUP:023A
RESULT_BUFFER			  Byte	 DGROUP:0012
TEMP_BUFFER			  Byte	 DGROUP:013A
WORDS_BUFFER			  Word	 DGROUP:0112

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  STACK				  16  0100 Para	  Stack	  STACK
  _DATA				  16  023D Word	  Public  DATA
_TEXT				  16  0047 Word	  Public  CODE
